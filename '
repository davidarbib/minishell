/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   expansion.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: darbib <darbib@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/02/05 15:23:42 by darbib            #+#    #+#             */
/*   Updated: 2021/02/10 13:21:24 by darbib           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "expand_quote_removal.h"
#include "libft.h"

static void	init_transitions_expansion(char transitions[STATE_NB][INPUT_NB])
{
	unsigned char c;

	c = '0';
	while (c <= '9')
		transitions[expand_core_state][c++] = expand_core_state;	
	c = 'A';
	while (c <= 'Z')
	{
		transitions[expand_first_state][c] = expand_core_state;	
		transitions[expand_core_state][c] = expand_core_state;
		c++;
	}
	c = 'a';
	while (c <= 'z')
	{
		transitions[expand_first_state][c] = expand_core_state;	
		transitions[expand_core_state][c] = expand_core_state;	
		c++;
	}
	transitions[expand_first_state]['_'] = expand_core_state;
	transitions[expand_core_state]['_'] = expand_core_state;
}

void	init_transitions(char transitions[STATE_NB][INPUT_NB])
{
	ft_memset(transitions[base_state], base_state, INPUT_NB);
	transitions[base_state]['\''] = squote_state;
	transitions[base_state]['\"'] = dquote_state;
	transitions[base_state]['\\'] = equote_state;
	transitions[base_state]['$'] = expand_first_state;
	transitions[squote_state]['\''] = base_state;
	transitions[dquote_state]['\"'] = base_state;
	transitions[dquote_state]['\\'] = equote_in_dquote_state;
	transitions[dquote_state]['$'] = expand_first_state;
	ft_memset(transitions[equote_state], base_state, INPUT_NB);
	ft_memset(transitions[expand_first_state], base_state, INPUT_NB);
	ft_memset(transitions[expand_core_state], base_state, INPUT_NB);
	ft_memset(transitions[equote_in_dquote_state], dquote_state, INPUT_NB);
	init_transitions_expansion(transitions);
}

void	init_actions(int (*actions[STATE_NB][INPUT_NB])(t_expand*))
{
	ft_bzero(actions, STATE_NB * INPUT_NB * sizeof(void*));
}

int	expand(char **word)
{
	char	transitions[STATE_NB][INPUT_NB];
	//int		(*actions[STATE_NB][INPUT_NB])(t_expand*);
	const char	*s;
	int i;
	char state;

	s = *word;
	init_transitions(transitions);
	//init_actions(actions);
	i = 0;
	state = base_state;
	while (s[i])
	{
		state = transitions[(int)state][(int)s[i]];
		i++;
	}
	return (1);
}
